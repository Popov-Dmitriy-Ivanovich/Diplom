version: "3.9"
services:
    redis:
        image: redis:latest
        hostname: redis
        restart: always
        ports:
            - "6379:6379"
        networks:
            - redis-network

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        environment:
            - ZOOKEEPER_CLIENT_PORT=2181
        networks:
            - kafka-network

    kafka:
        image: confluentinc/cp-kafka:latest
        depends_on:
            - zookeeper
        environment:
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
        networks:
            - kafka-network
        ports:
            - "9092:9092"
    postgres:
        hostname: postgres
        image: postgres:14.8-alpine3.18
        env_file: ./dockered_db/database.env
        shm_size: "1gb"
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}",
                ]
            interval: 10s
            retries: 5
            start_period: 30s
            timeout: 10s
        command:
            - "postgres"
            - "-c"
            - "max_connections=50"
            - "-c"
            - "shared_buffers=1GB"
            - "-c"
            - "effective_cache_size=4GB"
            - "-c"
            - "work_mem=16MB"
            - "-c"
            - "maintenance_work_mem=512MB"
            - "-c"
            - "random_page_cost=1.1"
            - "-c"
            - "temp_file_limit=10GB"
            - "-c"
            - "log_min_duration_statement=200ms"
            - "-c"
            - "idle_in_transaction_session_timeout=10s"
            - "-c"
            - "lock_timeout=1s"
            - "-c"
            - "statement_timeout=60s"
            - "-c"
            - "shared_preload_libraries=pg_stat_statements"
            - "-c"
            - "pg_stat_statements.max=10000"
            - "-c"
            - "pg_stat_statements.track=all"

        volumes:
            - ./dockered_db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
            - habrdb-data:/var/lib/postgresql/data
        ports:
            - "5432:5432"

        networks:
            - postgres
    pgadmin:
        container_name: pgadmin_container
        image: dpage/pgadmin4:7.2
        environment:
            PGADMIN_DEFAULT_EMAIL: "habrpguser@habr.com"
            PGADMIN_DEFAULT_PASSWORD: "pgadminpwd4habr"
            PGADMIN_CONFIG_SERVER_MODE: "False"
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        ports:
            - "5050:80"
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: "0.5"
                    memory: 1G
        networks:
            - postgres
    diplom_cmd:
        restart: always
        depends_on:
            postgres:
                condition: service_healthy
        build: Diplom_cmd
        env_file:
            - Diplom_cmd/.env
        networks:
            - postgres
            - diplom_cmd
            - kafka-network
            - redis-network
        ports:
            - "8080:8080"

    nginx:
        hostname: nginx
        depends_on:
            - diplom_cmd
        build: Diplom_ui
        ports:
            - "80:80"
            - "443:443"
        networks:
            - diplom_cmd

volumes:
    habrdb-data:
    pgadmin-data:

networks:
    diplom_cmd:
        driver: bridge
    postgres:
        driver: bridge
    kafka-network:
        driver: bridge
    redis-network:
        driver: bridge
